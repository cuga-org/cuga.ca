name: Generate CUGA Calendar ICS

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  build_and_commit_calendar:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow workflow to commit to the repository

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Specify Python version
          cache: 'pip' # Cache pip dependencies

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run event generator script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python event_generator.py

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Check for changes in the specific files
          if ! git diff --quiet HEAD -- generated_events.ics processed_prompts.txt; then
            echo "Changes detected in generated files."
            git add generated_events.ics processed_prompts.txt
            git commit -m "Automated: Update generated calendar and processed prompts"
            # Attempt to push, handle potential conflicts if remote changed
            # This simple push assumes the workflow is running on the default branch or a branch that can be directly pushed to.
            # For more complex scenarios (e.g. PRs), a different strategy would be needed.
            git push
            echo "Changes committed and pushed."
          else
            echo "No changes to commit."
          fi
