name: Deploy Static Preview Pages and Comment (using deploy-pages)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pages: write      # to deploy to GitHub Pages
  contents: read   # to checkout the code
  pull-requests: write # to comment on PRs
  id-token: write
  
jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up GitHub Pages
        uses: actions/configure-pages@v4

      - name: Get PR number for unique preview path
        id: pr_number
        run: echo "PR_NUM=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.' # Your static files are in the root. Adjust if needed (e.g., './public')
          name: preview-${{ github.head_ref }} # Unique artifact name

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: preview-${{ github.head_ref }}
          deployment_branch: gh-pages # Or your GitHub Pages branch
          deployment_path: previews/${{ github.event.number }} # Deploy to a subfolder

      - name: Add comment to PR
        uses: actions/github-script@v7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const preview_url = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.deployment.outputs.page_path }}/`;
            const message = `ðŸŽ‰ Preview deployed! You can view it here: ${preview_url}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
